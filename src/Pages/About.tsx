//page目录下的六个组件是路由组件，采用大驼峰名命法，About组件是主页面点击”关于我们“的时候展示项目两点的界面
import { Button } from 'antd';
import React from 'react';
import { Link } from 'react-router-dom';
const About: React.FC = () => {


  return (
    <div style={{fontSize:17,fontWeight:"bold" ,padding:"40px" } }>
      <div style={{fontSize:30,marginLeft:"35%"}}>关于功能和亮点以及异常处理</div>
    <div>  1. `npm start`之后,进入欢迎界面,此时处于未登录状态,url为`http://localhost:port/`,用户所能访问到的界面只有登录界面和欢迎界面，可尝试访问登录之后才可访问的一些路径，比如`http://localhost:port/about[error,user]`,都是访问不到的；
    </div>
    <div>
    2. 回到欢迎界面，点击文字跳转到登录界面，目前，设置了两个管理员账号，分别为 账号:111,密码:222和账号333:密码444,登录界面提供了检验账号密码是否正确的功能，不正确会给出错误信息，可以测试输入空格，不输入，输入账号错误，输入密码错误等场景查看报错信息；
   </div>
   <div>
    3. 选择一个管理员输入正确账号密码后登录会提示登录成功并将用户状态变为登录状态，跳转到主页面并且可以访问到所有登录状态下的路径，并且之前的登录界面也就回退不到了，可以尝试返回，只会回到欢迎界面，再次点击登录会到达主界面，也就避免了重复登录的情况。
    </div>
   <div>
   4. 退出登录：点击退出登录，弹出提示框，点击确认后退出回到第一步；后端摧毁用户登录信息，此时权限已经被收回，除非重新登录否则无法访问内部路径
    </div>
    <div>
    5. 修改管理员信息：管理员账号是唯一标识主码，只能在后台更改，修改需要确认密码，密码错误无法更改；
    </div>
    <div>
    6. 操作功能内有查看用户，编辑用户和删除用户功能：用户编辑用户时弹出编辑对话框，学号是用户唯一标识符不可修改，电话邮箱等都用了正则表达式进行校验，校验能力较为完善，点击删除用户会弹出删除确认对话框。
    </div>
    <div>
    7. 添加用户:这里与修改用户类似,不过内容为空,解决了点击关闭再次打开前一次的编辑内容还在的bug,新建用户时后端会校验学号是否唯一，给出回应
    </div>
    <div>
    8. 搜索功能：提供单关键词简单搜索，只要是用户信息内包含了输入的关键词,就会被搜索到,搜索数据达到五条以上也是还可以分页的,不会有bug,重置不会刷新浏览器，会回到最初无搜索的界面
    </div>
    <div>
    9. 其他异常处理:1.当后端主动设置该用户的cookie登录信息失效因为这个项目的session没有用文件保存,后端关闭了再重启就会导致所有session失效,也就模拟了用户cookie过期的情形,可以在server终端执行`ctr+C`，再执行`node koa.js`重新启动,再次返回页面,可以刷新一下页面或者进行与后端交互的功能,会弹出错误信息两秒后跳转到错误界面,需要重新登录:2.当前端的端口关闭可以模拟网络中断,可以在fe端口`ctr +C`中断批处理程序，这样回到浏览器执行任何涉及到请求数据的操作都会弹出网络错误；
    </div>
    <div>
    10. 响应式布局：在主界面实现了响应式布局，当页面宽度变窄时，页面会将一些不太重要的信息比如电话邮箱头像不再显示而是放到操作详情，当屏幕宽度小于六百时,会将左侧Sider收起来,放到下面（此过程需要重新渲染页面，由于实际情况是根据用户设备宽度进行渲染，没有
    </div>
    <div>
    网页宽度动态变化的场景,以此没有追踪改状态,如需要测试要手动刷新,当屏幕宽度小于600时,刷新便会变化）。
    </div>
    <Link to = "/app"><Button type='primary' style={{marginTop:"10px"}}>返回首页</Button></Link>
    </div>
  );
};

export default About;